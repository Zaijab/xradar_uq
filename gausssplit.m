function [wk,mk,Pk] = gausssplit(w,m,P,GM,n,ex,t,mu)
% w = prior weight
% m = prior mean
% P = prior cov
% GM = 
% n = number of components to split into
% mu = cislunar mass ratio


wi = [0.161670199667396;0.676659600665207;0.161670199667396];
mi = [-1.09080001170817;0;1.09080001170817];
si = [0.784394767127563;0.784394767127563;0.784394767127563];



r = m(1:3); 
v = m(4:6);

D = zeros(6,6,6);
E = zeros(6);


% Hessians
D(1:3,1:3,4) = [(3*mu*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*(mu - 1)*(2*mu + 2*r(1)))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (3*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) + (3*mu*(2*mu + 2*r(1) - 2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*(mu + r(1) - 1)*(2*mu + 2*r(1) - 2)^2)/(4*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*(mu + r(1))*(mu - 1)*(2*mu + 2*r(1))^2)/(4*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)), (3*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)*(mu + r(1) - 1)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(2)*(mu + r(1))*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)), (3*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(3)*(mu + r(1) - 1)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(3)*(mu + r(1))*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2));
                                                                                                                                                                (3*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)*(mu + r(1) - 1)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(2)*(mu + r(1))*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)),                   (3*mu*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) + (15*r(2)^2*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2) - (15*mu*r(2)^2*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2),                                                                                                                                         (15*r(2)*r(3)*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2) - (15*mu*r(2)*r(3)*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2);
                                                                                                                                                                (3*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(3)*(mu + r(1) - 1)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(3)*(mu + r(1))*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)),                                                                                                                                         (15*r(2)*r(3)*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2) - (15*mu*r(2)*r(3)*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2),                   (3*mu*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) + (15*r(3)^2*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2) - (15*mu*r(3)^2*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)];

D(1:3,1:3,5) = [                                  (3*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)*(2*mu + 2*r(1) - 2)^2)/(4*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(2)*(mu - 1)*(2*mu + 2*r(1))^2)/(4*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)), (3*mu*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2)) - (15*mu*r(2)^2*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(2)^2*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)),                                                                   (15*r(2)*r(3)*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)) - (15*mu*r(2)*r(3)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2));
                (3*mu*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2)) - (15*mu*r(2)^2*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(2)^2*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)),                                                                           (9*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (9*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)^3)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)^3*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2), (3*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)^2*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)^2*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2);
                                                                                                                                                      (15*r(2)*r(3)*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)) - (15*mu*r(2)*r(3)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)),                                                                     (3*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)^2*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)^2*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2), (3*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)*r(3)^2)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)*r(3)^2*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)];

D(1:3,1:3,6) = [                                  (3*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(3)*(2*mu + 2*r(1) - 2)^2)/(4*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(3)*(mu - 1)*(2*mu + 2*r(1))^2)/(4*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)),                                                                   (15*r(2)*r(3)*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)) - (15*mu*r(2)*r(3)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)), (3*mu*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2)) - (15*mu*r(3)^2*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(3)^2*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2));
                                                                                                                                                      (15*r(2)*r(3)*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)) - (15*mu*r(2)*r(3)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)), (3*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)^2*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)^2*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2),                                                                     (3*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)*r(3)^2)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)*r(3)^2*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2);
                (3*mu*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2)) - (15*mu*r(3)^2*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2)) + (15*r(3)^2*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)), (3*mu*r(2))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(2)*r(3)^2)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(2)*r(3)^2*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2),                                                                           (9*mu*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (9*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) - (15*mu*r(3)^3)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(7/2) + (15*r(3)^3*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(7/2)];
 
    





E = sum(D, 3);
S = chol(P)';
[V, Lambda] = eig(S' * E * S);
[~, idx] = max(diag(Lambda));
vstar = V(:,idx);
ustar = S * vstar;
ustar = ustar / norm(ustar);
su2 = 1 / (ustar' / P * ustar);
su = sqrt(su2);


wk = cell(n,1);
mk = cell(n,1);
Pk = cell(n,1);

for k = 1:n
    wk{k} = w*wi(k);
    mk{k} = m + mi(k)*su*ustar;
    Pk{k} = P + (si(k)^2-1)*su2*(ustar*ustar');
end


return