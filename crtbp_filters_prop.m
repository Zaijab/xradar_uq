function [dzda] = crtbp_filters_prop(a,z,GM,c,n,k,~,~,~,mu)
% CRTBP dynamics
%   a   - time
%   z   - vector of EKF, UKF for all mixands
%   c   - number of components (each component contains 1 ekf and 1 ukf)
%   n   - number of states
%   k   - number of sigma points 
%   mu  - cislunar mass ratio

% ----------- Sigma point and EKF propagation ----------- %
zj    = reshape(z,n*(k+n+1)+1,c);
dzjdt = zeros(n*(k+n+1)+1,c);
for j = 1:c
    Sj = reshape(zj(2:n*k+n+1,j),n,k+1); % sigma points
    Fj = zeros(n,k+1);
    
    for i = 1:k+1
        r = Sj(1:3,i);
        v = Sj(4:6,i);
        
        re = sqrt((r(1) + mu)^2 + r(2)^2 + r(3)^2); 
        rm = sqrt((r(1) - 1 + mu)^2 + r(2)^2 + r(3)^2); 
        xdot = zeros(6,1); 
        xdot(1:3) = v; 
        xdot(4) = r(1) + 2 * v(2) - (1 - mu) * (r(1) + mu) / re^3 - ...
            mu * (r(1) - 1 + mu) / rm^3; 
        xdot(5) = r(2) - 2 * v(1) - (1 - mu) * r(2) / re^3 - mu * r(2) / rm^3; 
        xdot(6) = -(1 - mu) * r(3) / re^3 - mu * r(3) / rm^3;
        
       Fj(:,i) = xdot;
    end
    
    dzjdt(2:n*(k+1)+1,j) = reshape(Fj,n*(k+1),1);

    % ------------ EKF Covariance Propagation ------------- %
    P = reshape(zj(n*k+n+2:end,j),n,n);
    F = zeros(6);

    % p-v block
    F(1:3,4:6) = eye(3);

    % v-p block
    F(4,1) = (mu - 1)/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(3/2) - mu/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(3/2) + (3*mu*(mu + r(1) - 1)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*(mu + r(1))*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2)) + 1;
    F(4,2) = (3*mu*r(2)*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2);
    F(4,3) = (3*mu*r(3)*(mu + r(1) - 1))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)*(mu + r(1))*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2);
    F(5,1) = (3*mu*r(2)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*r(2)*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2));
    F(5,2) = (mu - 1)/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(3/2) - mu/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(3/2) + (3*mu*r(2)^2)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)^2*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2) + 1;
    F(5,3) = (3*mu*r(2)*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2);
    F(6,1) = (3*mu*r(3)*(2*mu + 2*r(1) - 2))/(2*((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2)) - (3*r(3)*(mu - 1)*(2*mu + 2*r(1)))/(2*((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2));
    F(6,2) = (3*mu*r(2)*r(3))/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(2)*r(3)*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2);
    F(6,3) = (mu - 1)/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(3/2) - mu/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(3/2) + (3*mu*r(3)^2)/((mu + r(1) - 1)^2 + r(2)^2 + r(3)^2)^(5/2) - (3*r(3)^2*(mu - 1))/((mu + r(1))^2 + r(2)^2 + r(3)^2)^(5/2);
    
    % v-v block
    F(4:6, 4:6) = [0, 2, 0; -2, 0, 0; 0, 0, 0];
 
    Q = 1*eye(3); %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    G_w = [zeros(3); eye(3)];
    Pdot = F*P+P*F'+G_w*Q*G_w';
    
    dzjdt(n*(k+1)+2:end,j) = reshape(Pdot,n*n,1);
    
end

dzda = reshape(dzjdt,(n*(k+n+1)+1)*c,1);

end




